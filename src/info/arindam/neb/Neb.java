package info.arindam.neb;

import java.awt.Dimension;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 *
 * @author Arindam Biswas <arindam dot b at eml dot cc>
 */
public class Neb extends javax.swing.JPanel implements Engine.Listener {

    private final Engine engine;

    /**
     * Creates new form Neb
     */
    public Neb() {
        initComponents();
        engine = new Engine(this);
        engine.setAlgorithm((String) algorithmList.getSelectedItem());
        engine.render();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        canvas = new javax.swing.JPanel();
        dashboard = new javax.swing.JPanel();
        algorithmLabel = new javax.swing.JLabel();
        algorithmList = new javax.swing.JComboBox();
        parameterLabel = new javax.swing.JLabel();
        parameter1Label = new javax.swing.JLabel();
        parameter2Label = new javax.swing.JLabel();
        parameter3Label = new javax.swing.JLabel();
        parameter4Label = new javax.swing.JLabel();
        parameter5Label = new javax.swing.JLabel();
        parameter6Label = new javax.swing.JLabel();
        parameter7Label = new javax.swing.JLabel();
        parameter8Label = new javax.swing.JLabel();
        parameter9Label = new javax.swing.JLabel();
        parameter10Label = new javax.swing.JLabel();
        parameter1Value = new javax.swing.JTextField();
        parameter2Value = new javax.swing.JTextField();
        parameter3Value = new javax.swing.JTextField();
        parameter4Value = new javax.swing.JTextField();
        parameter5Value = new javax.swing.JTextField();
        parameter6Value = new javax.swing.JTextField();
        parameter7Value = new javax.swing.JTextField();
        parameter8Value = new javax.swing.JTextField();
        parameter9Value = new javax.swing.JTextField();
        parameter10Value = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        logLabel = new javax.swing.JLabel();
        renderButton = new javax.swing.JButton();
        logPane = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        statusLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        jTextField1.setText("jTextField1");

        canvas.setMinimumSize(new java.awt.Dimension(640, 640));
        canvas.setPreferredSize(new java.awt.Dimension(640, 640));
        canvas.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                canvasComponentResized(evt);
            }
        });

        javax.swing.GroupLayout canvasLayout = new javax.swing.GroupLayout(canvas);
        canvas.setLayout(canvasLayout);
        canvasLayout.setHorizontalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        canvasLayout.setVerticalGroup(
            canvasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        algorithmLabel.setFont(algorithmLabel.getFont().deriveFont(algorithmLabel.getFont().getStyle() | java.awt.Font.BOLD));
        algorithmLabel.setText("Algorithm");

        algorithmList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "green_1", "green_2" }));
        algorithmList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmListActionPerformed(evt);
            }
        });

        parameterLabel.setFont(parameterLabel.getFont().deriveFont(parameterLabel.getFont().getStyle() | java.awt.Font.BOLD));
        parameterLabel.setText("Parameters");

        parameter1Label.setText("1");

        parameter2Label.setText("2");

        parameter3Label.setText("3");

        parameter4Label.setText("4");

        parameter5Label.setText("5");

        parameter6Label.setText("6");

        parameter7Label.setText("7");

        parameter8Label.setText("8");

        parameter9Label.setText("9");

        parameter10Label.setText("10");

        parameter1Value.setText("--");

        parameter2Value.setText("--");

        parameter3Value.setText("--");

        parameter4Value.setText("--");

        parameter5Value.setText("--");

        parameter6Value.setText("--");

        parameter7Value.setText("--");

        parameter8Value.setText("--");

        parameter9Value.setText("--");

        parameter10Value.setText("--");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        logLabel.setFont(logLabel.getFont().deriveFont(logLabel.getFont().getStyle() | java.awt.Font.BOLD));
        logLabel.setText("Log");

        renderButton.setText("Render");
        renderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renderButtonActionPerformed(evt);
            }
        });

        logArea.setColumns(20);
        logArea.setRows(5);
        logPane.setViewportView(logArea);

        javax.swing.GroupLayout dashboardLayout = new javax.swing.GroupLayout(dashboard);
        dashboard.setLayout(dashboardLayout);
        dashboardLayout.setHorizontalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardLayout.createSequentialGroup()
                        .addComponent(logLabel)
                        .addContainerGap(214, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardLayout.createSequentialGroup()
                        .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(algorithmLabel)
                            .addComponent(parameter1Label)
                            .addComponent(parameter2Label)
                            .addComponent(parameter3Label)
                            .addComponent(parameter4Label)
                            .addComponent(parameter5Label)
                            .addComponent(parameter6Label)
                            .addComponent(parameter7Label)
                            .addComponent(parameter8Label)
                            .addComponent(parameter9Label)
                            .addComponent(parameterLabel)
                            .addComponent(parameter10Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(parameter10Value)
                                .addComponent(parameter9Value, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                .addComponent(parameter8Value)
                                .addComponent(parameter7Value)
                                .addComponent(parameter6Value)
                                .addComponent(parameter5Value)
                                .addComponent(parameter4Value)
                                .addComponent(parameter3Value)
                                .addComponent(parameter2Value)
                                .addComponent(parameter1Value))
                            .addComponent(algorithmList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dashboardLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(renderButton))
                    .addGroup(dashboardLayout.createSequentialGroup()
                        .addComponent(resetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyButton))
                    .addComponent(logPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        dashboardLayout.setVerticalGroup(
            dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardLayout.createSequentialGroup()
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel)
                    .addComponent(algorithmList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(parameterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter1Label)
                    .addComponent(parameter1Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter2Label)
                    .addComponent(parameter2Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter3Label)
                    .addComponent(parameter3Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter4Label)
                    .addComponent(parameter4Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter5Label)
                    .addComponent(parameter5Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter6Label)
                    .addComponent(parameter6Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter7Label)
                    .addComponent(parameter7Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter8Label)
                    .addComponent(parameter8Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter9Label)
                    .addComponent(parameter9Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(parameter10Label)
                    .addComponent(parameter10Value, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton)
                    .addComponent(applyButton))
                .addGap(18, 18, 18)
                .addComponent(logLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renderButton))
        );

        statusLabel.setText("Idle.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(statusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(canvas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void algorithmListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmListActionPerformed
        engine.setAlgorithm((String) algorithmList.getSelectedItem());
    }//GEN-LAST:event_algorithmListActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        engine.resetParameters();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        LinkedHashMap<String, String> parameters = new LinkedHashMap<>();
        parameters.put(parameter1Label.getText(), parameter1Value.getText());
        parameters.put(parameter2Label.getText(), parameter2Value.getText());
        parameters.put(parameter3Label.getText(), parameter3Value.getText());
        parameters.put(parameter4Label.getText(), parameter4Value.getText());
        parameters.put(parameter5Label.getText(), parameter5Value.getText());
        parameters.put(parameter6Label.getText(), parameter6Value.getText());
        parameters.put(parameter7Label.getText(), parameter7Value.getText());
        parameters.put(parameter8Label.getText(), parameter8Value.getText());
        parameters.put(parameter9Label.getText(), parameter9Value.getText());
        parameters.put(parameter10Label.getText(), parameter10Value.getText());
        engine.setParameters(parameters);
    }//GEN-LAST:event_applyButtonActionPerformed

    private void renderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renderButtonActionPerformed
        engine.render();
    }//GEN-LAST:event_renderButtonActionPerformed

    private void canvasComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_canvasComponentResized
        Dimension canvasSize = canvas.getSize();
        if (canvasSize.width > 0 && canvasSize.height > 0) {
            engine.setRasterSize(canvasSize);
        }
    }//GEN-LAST:event_canvasComponentResized


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel algorithmLabel;
    private javax.swing.JComboBox algorithmList;
    private javax.swing.JButton applyButton;
    private javax.swing.JPanel canvas;
    private javax.swing.JPanel dashboard;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea logArea;
    private javax.swing.JLabel logLabel;
    private javax.swing.JScrollPane logPane;
    private javax.swing.JLabel parameter10Label;
    private javax.swing.JTextField parameter10Value;
    private javax.swing.JLabel parameter1Label;
    private javax.swing.JTextField parameter1Value;
    private javax.swing.JLabel parameter2Label;
    private javax.swing.JTextField parameter2Value;
    private javax.swing.JLabel parameter3Label;
    private javax.swing.JTextField parameter3Value;
    private javax.swing.JLabel parameter4Label;
    private javax.swing.JTextField parameter4Value;
    private javax.swing.JLabel parameter5Label;
    private javax.swing.JTextField parameter5Value;
    private javax.swing.JLabel parameter6Label;
    private javax.swing.JTextField parameter6Value;
    private javax.swing.JLabel parameter7Label;
    private javax.swing.JTextField parameter7Value;
    private javax.swing.JLabel parameter8Label;
    private javax.swing.JTextField parameter8Value;
    private javax.swing.JLabel parameter9Label;
    private javax.swing.JTextField parameter9Value;
    private javax.swing.JLabel parameterLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton renderButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void renderingBegun() {
        statusLabel.setText("Rendering begun.");
        progressBar.setIndeterminate(true);
    }

    @Override
    public void renderingPaused() {

    }

    @Override
    public void renderingResumed() {

    }

    @Override
    public void renderingEnded() {
        canvas.getGraphics().drawImage(engine.getPositive(), 0, 0, null);
        progressBar.setIndeterminate(false);
        statusLabel.setText("Rendering ended.");
    }

    @Override
    public void errorOccurred() {

    }

    @Override
    public void algorithmSet(LinkedHashMap<String, String> newParameters) {
        Iterator i = newParameters.entrySet().iterator();
        Map.Entry p = (Map.Entry) i.next();
        parameter1Label.setText((String) p.getKey());
        parameter1Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter2Label.setText((String) p.getKey());
        parameter2Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter3Label.setText((String) p.getKey());
        parameter3Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter4Label.setText((String) p.getKey());
        parameter4Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter5Label.setText((String) p.getKey());
        parameter5Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter6Label.setText((String) p.getKey());
        parameter6Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter7Label.setText((String) p.getKey());
        parameter7Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter8Label.setText((String) p.getKey());
        parameter8Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter9Label.setText((String) p.getKey());
        parameter9Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter10Label.setText((String) p.getKey());
        parameter10Value.setText((String) p.getValue());
        statusLabel.setText("Algorithm set.");
    }

    @Override
    public void parametersSet() {
        statusLabel.setText("Parameters set.");
    }

    @Override
    public void parametersReset(LinkedHashMap<String, String> newParameters) {
        Iterator i = newParameters.entrySet().iterator();
        Map.Entry p = (Map.Entry) i.next();
        parameter1Label.setText((String) p.getKey());
        parameter1Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter2Label.setText((String) p.getKey());
        parameter2Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter3Label.setText((String) p.getKey());
        parameter3Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter4Label.setText((String) p.getKey());
        parameter4Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter5Label.setText((String) p.getKey());
        parameter5Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter6Label.setText((String) p.getKey());
        parameter6Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter7Label.setText((String) p.getKey());
        parameter7Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter8Label.setText((String) p.getKey());
        parameter8Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter9Label.setText((String) p.getKey());
        parameter9Value.setText((String) p.getValue());
        p = (Map.Entry) i.next();
        parameter10Label.setText((String) p.getKey());
        parameter10Value.setText((String) p.getValue());
        statusLabel.setText("Parameters reset.");
    }

    @Override
    public void log(String message) {
        logArea.append(message + "\n");
    }
}
